# Generated by Django 4.1.5 on 2023-01-27 01:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('viewer', '0153_image_image_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalGallery',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('gid', models.CharField(max_length=200)),
                ('token', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('title_jpn', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('category', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('uploader', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('comment', models.TextField(blank=True, default='')),
                ('posted', models.DateTimeField(blank=True, null=True, verbose_name='Date posted')),
                ('filecount', models.IntegerField(blank=True, default=0, null=True, verbose_name='File count')),
                ('filesize', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='Size')),
                ('expunged', models.BooleanField(default=False)),
                ('rating', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('hidden', models.BooleanField(default=False)),
                ('fjord', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('provider', models.CharField(default='generic', max_length=50, verbose_name='Provider')),
                ('dl_type', models.CharField(default='', max_length=100)),
                ('reason', models.CharField(blank=True, default='backup', max_length=200, null=True)),
                ('thumbnail_url', models.URLField(blank=True, default='', max_length=2000, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Normal'), (4, 'Denied'), (5, 'Deleted'), (6, 'No metadata')], db_index=True, default=1)),
                ('provider_metadata', models.TextField(blank=True, default='')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical gallery',
                'verbose_name_plural': 'historical galleries',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AlterModelOptions(
            name='archive',
            options={'permissions': (('publish_archive', 'Can publish available archives'), ('manage_archive', 'Can manage available archives'), ('mark_archive', 'Can mark available archives'), ('view_marks', 'Can view archive marks'), ('match_archive', 'Can match archives'), ('update_metadata', 'Can update metadata'), ('recalc_fileinfo', 'Can recalculate file info'), ('upload_with_metadata_archive', 'Can upload a file with an associated metadata source'), ('expand_archive', 'Can extract and reduce archives'), ('compare_archives', 'Can compare archives based on different algorithms'), ('recycle_archive', 'Can utilize the Archive Recycle Bin'), ('archive_internal_info', 'Can see selected internal Archive information'), ('mark_similar_archive', 'Can run the similar Archives process'), ('read_archive_change_log', 'Can read the Archive change log'))},
        ),
        migrations.AlterModelOptions(
            name='gallery',
            options={'permissions': (('publish_gallery', 'Can publish available galleries'), ('private_gallery', 'Can set private available galleries'), ('download_gallery', 'Can download present galleries'), ('mark_delete_gallery', 'Can mark galleries as deleted'), ('add_deleted_gallery', 'Can add galleries as deleted'), ('manage_missing_archives', 'Can manage missing archives'), ('view_submitted_gallery', 'Can view submitted galleries'), ('approve_gallery', 'Can approve submitted galleries'), ('wanted_gallery_found', 'Can be notified of new wanted gallery matches'), ('crawler_adder', 'Can add links to the crawler with more options'), ('read_gallery_change_log', 'Can read the Gallery change log')), 'verbose_name_plural': 'galleries'},
        ),
        migrations.CreateModel(
            name='HistoricalGallery_tags',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('m2m_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('gallery', models.ForeignKey(blank=True, db_constraint=False, db_tablespace='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='viewer.gallery')),
                ('history', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='viewer.historicalgallery')),
                ('tag', models.ForeignKey(blank=True, db_constraint=False, db_tablespace='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='viewer.tag')),
            ],
            options={
                'verbose_name': 'HistoricalGallery_tags',
            },
        ),
        migrations.AddField(
            model_name='historicalgallery',
            name='first_gallery',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='viewer.gallery'),
        ),
        migrations.AddField(
            model_name='historicalgallery',
            name='gallery_container',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='viewer.gallery'),
        ),
        migrations.AddField(
            model_name='historicalgallery',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalgallery',
            name='magazine',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='viewer.gallery'),
        ),
        migrations.AddField(
            model_name='historicalgallery',
            name='parent_gallery',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='viewer.gallery'),
        ),
        migrations.CreateModel(
            name='HistoricalArchive',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('title_jpn', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('zipped', models.CharField(max_length=500, verbose_name='File')),
                ('original_filename', models.CharField(blank=True, max_length=500, null=True, verbose_name='Original Filename')),
                ('crc32', models.CharField(blank=True, max_length=10, verbose_name='CRC32')),
                ('match_type', models.CharField(blank=True, default='', max_length=40, null=True, verbose_name='Match type')),
                ('filesize', models.BigIntegerField(blank=True, null=True, verbose_name='Size')),
                ('filecount', models.IntegerField(blank=True, null=True, verbose_name='File count')),
                ('public_date', models.DateTimeField(blank=True, null=True)),
                ('source_type', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Source type')),
                ('reason', models.CharField(blank=True, default='backup', max_length=200, null=True, verbose_name='Reason')),
                ('public', models.BooleanField(default=False)),
                ('extracted', models.BooleanField(default=False)),
                ('binned', models.BooleanField(default=False)),
                ('details', models.TextField(blank=True, default='', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('gallery', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='viewer.gallery')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical archive',
                'verbose_name_plural': 'historical archives',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
