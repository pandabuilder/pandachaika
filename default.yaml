# requests_headers:
  # Mask every request with this user-agent.
  # user-agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0
general:
  # db_engine to use. mysql or postgresql are possible.
  db_engine: postgresql
  # When walking folders, only add as new files the ones that fit this filter.
  # Allows accepting alternative extensions for ZIP (CBZ).
  filename_filter:
  - '*.zip'
  # Django secret key, needed. CHANGE IT. Don't use % here.
  django_secret_key: 89!yi9gvd2r*m5rq9y-elj86u*zg@-j3ce90@^7+0(-!fkgpzd
  # Enable Django debug mode, that will be more verbose in case of something going wrong.
  django_debug_mode: false
  # How torrent downloads are handled. remote means file is downloaded on a remote server, so the file must be downloaded via FTP from that server.
  # local_copy, local_move, local_hardlink means files will be copied or moved instead of FTP downloading.
  # For hardlinks, make sure that it's being copied under the same filesystem.
  download_handler: remote
  download_handler_torrent: ''
  download_handler_hath: ''
  # Wait timer used for most request. A value that should not get you banned is 6 seconds. Lower than that is risky.
  wait_timer: 6
  # Start the timed downloader on startup.
  timed_downloader_startup: false
  # Timed downloader cycle timer.
  timed_downloader_cycle_timer: 5.0
  # Number of parallel post downloaders (each one opens a FTP connection).
  parallel_post_downloaders: 4
  # Reload the server when it detects file changes (CherryPy feature).
  cherrypy_auto_restart: false
  # Auto discard galleries that contain these tags. For new downloads and matches.
  banned_tags:
  - language:thai
  - language:chinese
  - language:korean
  - language:french
  - language:spanish
  - language:italian
  - language:hungarian
  - language:portuguese
  - language:polish
  - language:russian
  - language:vietnamese
  # Auto discard galleries that contain these uploaders. For new downloads and matches.
  banned_uploaders:
  - random_guy
  # WARNING: will add all galleries as public, not only feed ones.
  add_as_public: false
  # Timeout for most web requests (seconds)
  timeout_timer: 25
  # Mark archives (Mark system) based on similarities
  mark_similar_new_archives: false
  # Auto hash images when adding new archives
  auto_hash_images: false
  # Auto phash images when adding new archives
  auto_phash_images: false
  # Auto process wanted images  when adding new archives (requires numpy, opencv-python installed)
  auto_match_wanted_images: false
  # Create marks for archives that when their metadata change, the accepted WantedGallery is no longer valid
  recheck_wanted_on_update: false
  # Sizes to apply when using the resized extract option.
  vertical_image_max_width: 900
  horizontal_image_max_width: 1500
  # Force the minimum log level to send to logs (database, file). Defaults to INFO if not present, DEBUG in debug mode.
  force_log_level: INFO
  # Disable SQL log
  disable_sql_log: false
# Extra tool to apply to images when using the cloning tool, use 'input' and 'output' kwargs on executable_path to replace on runtime
cloning_image_tool:
  enable: false
  name: ''
  executable_path: ''
  description: ''
  file_filters:
    - '*.png'
  extra_arguments: ''
allowed:
  # If set to yes, galleries that were already added will be processed if added again.
  replace_metadata: false
  # If set to yes, galleries that were already added and downloaded will be redownloaded.
  # WARNING: if you use link_monitor, it will keep redownloading files. This is mostly used internally.
  redownload: false
  # For providers that provide gallery relationships, auto-fetch the next gallery if possible
  auto_download_nested: false
  # If set to yes, galleries marked as failed that are added again to download will be processed.
  retry_failed: false
  # After finding a non-match, try to match with internal galleries right away.
  internal_matches_for_non_matches: false
  # If set to yes, torrent downloads using the .rar, .7zip formats will be automatically transformed to .zip file. Requires the rarfile and py7zr modules.
  convert_others_to_zip: true
  # Add links not considered the last of their chain as deleted.
  non_current_links_as_deleted: false
matchers:
  # List of possible matchers to use. Negative values disable that particular matcher.
  # Positive values are sorted ascending in their use, so if the first one fails, the next one will try to match.
  # Warning: some of them might be outdated.
  panda_title: -2
  panda_cover: -1
  panda_image: -1
  chaika_hash: 1
  chaika_main_title: 2
  chaika_main_clean_title: 3
  chaika_meta_title: 4
  chaika_size: 5
downloaders:
  # List of possible downloaders to use. Negative values disable that particular downloader.
  # Positive values are sorted ascending in their use, so if the first one fails, the next one will try to download.
  # Warning: Some of them might be outdated.
  chaika_archive: 5
  panda_archive: 4
  panda_torrent: 3
  panda_hath: -1
  panda_info: -1
auto_wanted:
  # Auto add entries as wanted galleries from providers based on filters.
  enable: true
  startup: false
  cycle_timer: 4
  providers:
  - twitter
  # Automatically add this text to "unwanted_title" field on generated wanted galleries
  unwanted_title: '[Chinese]'
pushover:
  # Pushover notifications on wanted galleries found.
  enable: false
  user_key: ''
  token: ''
  device: ''
  sound: ''
mail_logging:
  # Some stuff will be reported to email. (Server Error, new gallery submissions.)
  enable: false
  mailhost: ''
  from: ''
  to: ''
  subject: ''
  username: ''
  password: ''
# ElasticSearch for advanced search
elasticsearch:
  enable: false
  url: http://localhost:9200/
  max_result_window: 10000
  auto_refresh: false
  auto_refresh_gallery: false
  index_name: viewer
  gallery_index_name: viewer_gallery
  only_index_public: false
  timeout: 20
# External downloader
gallery_dl:
  executable_name: gallery-dl
  executable_path: ''
  config_file: ''
  extra_arguments: ''
autoupdater:
  # Auto update gallery metadata (only panda is supported).
  enable: false
  startup: false
  # Which providers use the autoupdater.
  providers:
  - panda
  cycle_timer: 2
  # How many days back for filtering galleries to update
  buffer_back: 8
  # How many days after for filtering galleries to update
  buffer_after: 0
match_params:
  # If set to yes, archives already matched that fit into "rematch_file_list" will be matched again.
  rematch_file: false
  # List of match_types that will be considered in a rematch.
  rematch_file_list:
  - non-match
  # Rehash files for their CRC32.
  rehash_files: false
  # If an archive with the same CRC32 is found, copy its matching info.
  copy_match_file: true
locations:
  # Absolute location in the filesystem where the media will be stored. Includes archives, thumbnails, and extracted archives.
  media_root: ''
  # Absolute location in the filesystem where the static files will be stored.
  static_root: ''
  # Relative location where archive (HTTP) downloads will be stored. Can be replaced by each provider.
  archive_dl_folder: galleries/archive_dls
  # Relative location where torrent downloads will be stored. Can be replaced by each provider.
  torrent_dl_folder: galleries/torrent_dls
  # Custom absolute location for the logfile. Can be commented to use the default folder.
  # log_location: /home/panda/crawler.log
database:
  # If mysql is the db_engine these parameters must be filled.
  mysql_name: pandafrontend
  mysql_user: pandaadmin
  mysql_password: pandaadmin
  mysql_host: localhost
  mysql_port: '3306'
  # If postgresql is the db_engine, these parameters must be filled.
  postgresql_name: pandaweb
  postgresql_user: pandaadmin
  postgresql_password: pandaadmin
  postgresql_host: localhost
  postgresql_port: '5432'
torrent:
  # Parameters needed if using a torrent downloader to configure the connection to the torrent client. Possible clients: Transmission, uTorrent.
  client: transmission
  user: panda
  pass: panda
  address: http://localhost/transmission/rpc
  port: 9091
  # download_dir only implemented for Transmission
  download_dir: /home/panda/downloads/torrents
  # By default, the validity of the server certificate is checked. If it's a self-signed cert for example, set it to "yes".
  # no_certificate_check: false
ftps:
  # Download files from the remote server, when using remote handler. Only option available is FTPS connection.
  user: panda
  passwd: panda
  address: remote.server.com
  # Where the torrent downloads are located on the remote server.
  remote_torrent_dir: /home/pandaremote/downloads/torrent
  # If specified, address to bind to when opening FTP connections to the remote server. (ip, port)
  # bind_host: 192.168.1.200
  # bind_port: 0
  # By default, the validity of the server certificate is checked. If it's a self-signed cert for example, set it to "yes".
  no_certificate_check: false
webserver:
  # Webserver information, if used.
  bind_address: 0.0.0.0
  bind_port: 8090
  # Bind using socket
  socket_file: null
  enable_ssl: false
  # Only needed if enable_ssl is yes.
  ssl_certificate: /home/panda/certs/panda.crt
  # Only needed if enable_ssl is yes.
  ssl_private_key: /home/panda/certs/panda.key
  # Write access log to file.
  write_access_log: false
  # Log to screen.
  log_to_screen: false
urls:
  # URLs for webserver
  media_url: /media/
  static_url: /static/
  viewer_main_url: ''
  # If it's being served behind a reverse proxy, activate this option to fix absolute URL generation.
  behind_proxy: false
  # Enable the /submit URL for any user (even non-registered) to submit possible panda links to add.
  enable_public_submit: false
  # Enable public facing stats
  enable_public_stats: false
  # Enable public facing marks in Archive page. These are filtered by reason, not individually
  enable_public_marks: false
  public_mark_reasons:
    - images_sha1_similarity
    - images_phash_similarity
  external_media_server: ''
  external_as_main_download: false
  # User facing URL, (scheme+authority), used to resolve absolute URLs where the request is not accessible.
  main_webserver_url: ''
  elasticsearch_as_main_urls: false
# Used if two instances of this application are running, to communicate between them (user_token must be set on an account on the remote server)
remote_site:
  api_url: https://panda.chaika.moe/jsonapi
  user_token: asdf1234
  remote_folder: /media/galleries/archives
# Control the startup of the monitored_links subsystem (threads)
monitored_links:
  enable: false
# each provider specific settings must be nested inside the "providers" key.
providers:
  fakku:
    # Session cookie for FAKKU. Enables fetching "controversial" galleries metadata.
#    cookies:
  mugimugi:
    general:
      # mugimugi api key
      api_key: ''
  nhentai:
    # Session cookie for nhentai. Enables torrent downloads.
    cookies:
      sessionid: ''
  panda:
    general:
      # When crawling the home pages, stop at limit page number. This parameter is optional
      stop_page_number: 5
      # panda RSS reports categories, you can use this to pre-filter what galleries can be processed, check panda.settings for possible options.
      accepted_rss_categories:
      - [Doujinshi]
      - [Manga]
      - [Artist CG Sets]
      - [Game CG Sets]
      - [Image Sets]
      - [Non-H]
      - [Cosplay]
      - [Asian Porn]
      - [Misc]
      - [Private]
    locations:
      # Relative location where hath downloads will be stored.
      hath_dl_folder: galleries/hath_dls
      # Local path were the hath downloads are stored (in case a local folder is being used).
      local_hath_folder: /home/panda/hh/download
      # Where the hath downloads are located on the remote server.
      remote_hath_dir: /hh/download
    # Log into exhentai on your browser, check all the cookies for it, and paste their keys, values here.
    # uconfig one is necessary if you want filters on every request.
    # Also archive download must be set to auto-download, auto-accept.
    cookies:
      ipb_member_id: ''
      ipb_pass_hash: ''
      yay: ''
      uconfig: ''
# Twitter integration (limited, for some accounts)
#  twitter:
#    general:
#      token: ''
#      token_secret: ''
#      consumer_key: ''
#      consumer_secret: ''
